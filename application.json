{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Application Infrastucture with AWS CloudFormation",
    "Parameters": {
        "networkStackName": {
            "Type": "String"
        },
        "AMI": {
            "Description": "AMI Image ID.",
            "Type": "String"
        },
        "s3bucketName": {
            "ConstraintDescription": "No Camelcase allowed",
            "Description": "s3bucketName for web",
            "Type": "String"
        },
        "CodeDeployS3Bucket": {
            "Type": "String"
        },
        "VPCName": {
            "Default": "Test",
            "Type": "String"
        },
        "EC2Size": {
            "Default": "20",
            "Description": "The size of the database (GiB)",
            "Type": "Number",
            "MinValue": "5",
            "MaxValue": "1024"
        },
        "RDSize": {
            "Default": "20",
            "Description": "The size of the database (GiB)",
            "Type": "Number",
            "MinValue": "5",
            "MaxValue": "1024",
            "ConstraintDescription": "must be between 20 and 65536 GiB."
        },
        "certificateARN": {
            "Type": "String"
        },
        "hostedZoneID": {
            "Type": "String"
        },
        "domainName": {
            "Description": "from email id",
            "Type": "String"
        }
    },
    "Resources": {
        "MyRDSDB": {
            "Type": "AWS::RDS::DBInstance",
            "DeletionPolicy": "Delete",
            "Properties": {
                "AllocatedStorage": {
                    "Ref": "RDSize"
                },
                "MultiAZ": false,
                "DBInstanceIdentifier": "csye6225-spring2020",
                "DBInstanceClass": "db.t3.micro",
                "MasterUsername": "dbuser",
                "MasterUserPassword": "dbpassword",
                "Engine": "MySQL",
                "EngineVersion": "5.7.28",
                "DBName": "UserDB",
                "DBSubnetGroupName": {
                    "Ref": "dbSubnetGroup"
                },
                "PubliclyAccessible": true,
                "VPCSecurityGroups": [
                    {
                        "Ref": "DBSecurityGroup"
                    }
                ]
            }
        },
        "WebAppS3": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "ManagedPolicyName": "WebAppS3",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "s3:PutObject",
                                "s3:DeleteObject",
                                "s3:GetObject"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "s3bucketName"
                                            },
                                            "/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "s3bucketName"
                                            },
                                            ""
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "CloudWatchAgentServerPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "cloudwatch:PutMetricData",
                                "ec2:DescribeVolumes",
                                "ec2:DescribeTags",
                                "logs:PutLogEvents",
                                "logs:DescribeLogStreams",
                                "logs:DescribeLogGroups",
                                "logs:CreateLogStream",
                                "logs:CreateLogGroup"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "ssm:GetParameter"
                            ],
                            "Resource": "arn:aws:ssm:*:*:parameter/AmazonCloudWatch-*"
                        }
                    ]
                },
                "PolicyName": "CloudWatchAgentServerPolicy",
                "Roles": [
                    {
                        "Ref": "CodeDeployEC2ServiceRole"
                    }
                ]
            }
        },
        "CodeDeployEC2S3": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "s3:Get*",
                                "s3:List*"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Sub": "arn:aws:s3:::${CodeDeployS3Bucket}"
                                },
                                {
                                    "Fn::Sub": "arn:aws:s3:::${CodeDeployS3Bucket}/*"
                                }
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:PutObject",
                                "s3:GetObject",
                                "s3:DeleteObject"
                            ],
                            "Resource": [
                                {
                                    "Fn::Sub": "arn:aws:s3:::${s3bucketName}"
                                },
                                {
                                    "Fn::Sub": "arn:aws:s3:::${s3bucketName}/*"
                                }
                            ]
                        }
                    ]
                },
                "PolicyName": "CodeDeployEC2S3",
                "Roles": [
                    {
                        "Ref": "CodeDeployEC2ServiceRole"
                    }
                ]
            }
        },
        "EC2CSYE6225": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": "EC2CSYE6225",
                "Path": "/",
                "ManagedPolicyArns": [
                    {
                        "Ref": "WebAppS3"
                    }
                ],
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                }
            }
        },
        "CircleCIUploadToS3": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:PutObject"
                            ],
                            "Resource": [
                                {
                                    "Fn::Sub": "arn:aws:s3:::${CodeDeployS3Bucket}/*"
                                }
                            ]
                        }
                    ]
                },
                "PolicyName": "CircleCIUploadToS3",
                "Users": [
                    "cicd",
                    "circleci"
                ]
            }
        },
        "CircleCICodeDeploy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "codedeploy:RegisterApplicationRevision",
                                "codedeploy:GetApplicationRevision"
                            ],
                            "Resource": [
                                {
                                    "Fn::Sub": "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:application:${CodeDeployApplication}"
                                }
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "codedeploy:CreateDeployment",
                                "codedeploy:GetDeployment"
                            ],
                            "Resource": [
                                {
                                    "Fn::Sub": "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${CodeDeployApplication}/${CodeDeployGroup}"
                                }
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "codedeploy:GetDeploymentConfig"
                            ],
                            "Resource": [
                                {
                                    "Fn::Sub": "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.OneAtATime"
                                },
                                {
                                    "Fn::Sub": "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.HalfAtATime"
                                },
                                {
                                    "Fn::Sub": "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.AllAtOnce"
                                }
                            ]
                        }
                    ]
                },
                "PolicyName": "CircleCI-Code-Deploy",
                "Users": [
                    "cicd",
                    "circleci"
                ]
            }
        },
        "CodeDeployEC2ServiceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "CodeDeployServiceRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "RoleName": "CodeDeployEC2ServiceRole"
            }
        },
        "CodeDeployServiceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "CodeDeployServiceRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "codedeploy.amazonaws.com"
                                ]
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"
                ],
                "RoleName": "CodeDeployServiceRole"
            }
        },
        "CodeDeployApplication": {
            "Type": "AWS::CodeDeploy::Application",
            "Properties": {
                "ApplicationName": "csye6225-webapp",
                "ComputePlatform": "Server"
            }
        },
        "CodeDeployGroup": {
            "Type": "AWS::CodeDeploy::DeploymentGroup",
            "Properties": {
                "ApplicationName": {
                    "Ref": "CodeDeployApplication"
                },
                "AutoRollbackConfiguration": {
                    "Enabled": true,
                    "Events": [
                        "DEPLOYMENT_FAILURE"
                    ]
                },
                "DeploymentGroupName": "csye6225-webapp-deployment",
                "DeploymentStyle": {
                    "DeploymentOption": "WITHOUT_TRAFFIC_CONTROL",
                    "DeploymentType": "IN_PLACE"
                },
                "Ec2TagFilters": [
                    {
                        "Key": "aws:cloudformation:stack-name",
                        "Type": "KEY_AND_VALUE",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}"
                        }
                    }
                ],
                "ServiceRoleArn": {
                    "Fn::GetAtt": [
                        "CodeDeployServiceRole",
                        "Arn"
                    ]
                }
            }
        },
        "MyInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "CodeDeployEC2ServiceRole"
                    }
                ]
            }
        },
        "dbSubnetGroup": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "RDS Subnet Group",
                "DBSubnetGroupName": "rds",
                "SubnetIds": [
                    {
                        "Fn::ImportValue": {
                            "Fn::Sub": "${VPCName}-subnet-A"
                        }
                    },
                    {
                        "Fn::ImportValue": {
                            "Fn::Sub": "${VPCName}-subnet-B"
                        }
                    },
                    {
                        "Fn::ImportValue": {
                            "Fn::Sub": "${VPCName}-subnet-C"
                        }
                    }
                ]
            }
        },
        "EncryptedS3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": {
                    "Ref": "s3bucketName"
                },
                "LifecycleConfiguration": {
                    "Rules": [
                        {
                            "Transitions": [
                                {
                                    "StorageClass": "STANDARD_IA",
                                    "TransitionInDays": 30
                                }
                            ],
                            "Status": "Enabled"
                        }
                    ]
                },
                "BucketEncryption": {
                    "ServerSideEncryptionConfiguration": [
                        {
                            "ServerSideEncryptionByDefault": {
                                "SSEAlgorithm": "AES256"
                            }
                        }
                    ]
                }
            },
            "DeletionPolicy": "Delete"
        },
        "WebServerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Access to ports 22, 80 & 443 for webapp",
                "GroupName": "csye6225-application-securitygroup",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3000",
                        "ToPort": "3000",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "FromPort": "8080",
                        "IpProtocol": "tcp",
                        "ToPort": "8080",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "VpcId": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "VPC"
                    }
                }
            }
        },
        "DBSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Creating Security group for webapp using Ingress rules",
                "GroupName": "csye6225-database-securitygroup",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3306",
                        "ToPort": "3306",
                        "SourceSecurityGroupId": {
                            "Ref": "WebServerSecurityGroup"
                        }
                    }
                ],
                "VpcId": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "VPC"
                    }
                }
            }
        },
        "MyLaunchConfig": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "LaunchConfigurationName": "asg_launch_config",
                "InstanceType": "t2.micro",
                "PlacementTenancy": "default",
                "ImageId": {
                    "Ref": "AMI"
                },
                "IamInstanceProfile": {
                    "Ref": "MyInstanceProfile"
                },
                "SecurityGroups": [
                    {
                        "Ref": "WebServerSecurityGroup"
                    }
                ],
                "AssociatePublicIpAddress": true,
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "20",
                            "VolumeType": "gp2",
                            "DeleteOnTermination": true
                        }
                    }
                ],
                "KeyName": "csye6225",
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#cloud-boothook\n",
                                "#!/bin/sh\n",
                                "cd /etc/profile.d\n",
                                "sudo touch custom.sh\n",
                                "sudo echo export RDS_HOSTNAME=",
                                {
                                    "Fn::GetAtt": [
                                        "MyRDSDB",
                                        "Endpoint.Address"
                                    ]
                                },
                                " >> custom.sh\n",
                                "sudo echo export RDS_USERNAME=dbuser",
                                " >> custom.sh\n",
                                "sudo echo export RDS_PASSWORD=dbpassword",
                                " >> custom.sh\n",
                                "sudo echo export S3_BUCKET_ADDR=",
                                {
                                    "Ref": "s3bucketName"
                                },
                                " >> custom.sh\n"
                            ]
                        ]
                    }
                }
            }
        },
        "WebServerGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "AutoScalingGroupName": "AutoScalingGroup",
                "Cooldown": "60",
                "DesiredCapacity": "3",
                "LaunchConfigurationName": {
                    "Ref": "MyLaunchConfig"
                },
                "VPCZoneIdentifier": [
                    {
                        "Fn::ImportValue": {
                            "Fn::Sub": "${VPCName}-subnet-A"
                        }
                    },
                    {
                        "Fn::ImportValue": {
                            "Fn::Sub": "${VPCName}-subnet-B"
                        }
                    }
                ],
                "MaxSize": "10",
                "MinSize": "3",
                "TargetGroupARNs": [
                    {
                        "Ref": "ALBTargetGroup"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "EC2-Server",
                        "PropagateAtLaunch": true
                    }
                ]
            }
        },
        "WebServerScaleUpPolicy": {
            "Type": "AWS::AutoScaling::ScalingPolicy",
            "Properties": {
                "AdjustmentType": "ChangeInCapacity",
                "AutoScalingGroupName": {
                    "Ref": "WebServerGroup"
                },
                "Cooldown": "60",
                "ScalingAdjustment": "1"
            }
        },
        "WebServerScaleDownPolicy": {
            "Type": "AWS::AutoScaling::ScalingPolicy",
            "Properties": {
                "AdjustmentType": "ChangeInCapacity",
                "AutoScalingGroupName": {
                    "Ref": "WebServerGroup"
                },
                "Cooldown": "60",
                "ScalingAdjustment": "-1"
            }
        },
        "CPUAlarmHigh": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Scale-up if CPU > 90% for 10 minutes",
                "MetricName": "CPUUtilization",
                "Namespace": "AWS/EC2",
                "Statistic": "Average",
                "Period": "300",
                "EvaluationPeriods": "2",
                "Threshold": "5",
                "AlarmActions": [
                    {
                        "Ref": "WebServerScaleUpPolicy"
                    }
                ],
                "Dimensions": [
                    {
                        "Name": "AutoScalingGroupName",
                        "Value": {
                            "Ref": "WebServerGroup"
                        }
                    }
                ],
                "ComparisonOperator": "GreaterThanThreshold"
            }
        },
        "CPUAlarmLow": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Scale-down if CPU < 70% for 10 minutes",
                "MetricName": "CPUUtilization",
                "Namespace": "AWS/EC2",
                "Statistic": "Average",
                "Period": "300",
                "EvaluationPeriods": "2",
                "Threshold": "3",
                "AlarmActions": [
                    {
                        "Ref": "WebServerScaleDownPolicy"
                    }
                ],
                "Dimensions": [
                    {
                        "Name": "AutoScalingGroupName",
                        "Value": {
                            "Ref": "WebServerGroup"
                        }
                    }
                ],
                "ComparisonOperator": "LessThanThreshold"
            }
        },
        "ApplicationLoadBalancer": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Name": "ApplicationLoadBalancer",
                "Subnets": [
                    {
                        "Fn::ImportValue": {
                            "Fn::Sub": "${VPCName}-subnet-A"
                        }
                    },
                    {
                        "Fn::ImportValue": {
                            "Fn::Sub": "${VPCName}-subnet-B"
                        }
                    }
                ],
                "Scheme": "internet-facing",
                "Type": "application",
                "SecurityGroups": [
                    {
                        "Ref": "LoadBalancerSecurityGroup"
                    }
                ],
                "IpAddressType": "ipv4"
            }
        },
        "ALBListenerService": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "DefaultActions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "ALBTargetGroup"
                        }
                    }
                ],
                "LoadBalancerArn": {
                    "Ref": "ApplicationLoadBalancer"
                },
                "Port": "80",
                "Protocol": "HTTP"
            }
        },
        "ALBTargetGroup": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "HealthCheckIntervalSeconds": 30,
                "HealthCheckPath": "/",
                "HealthCheckProtocol": "HTTP",
                "HealthCheckTimeoutSeconds": 7,
                "Name": "ALBTargetGroup",
                "Port": 3000,
                "Protocol": "HTTP",
                "TargetType": "instance",
                "UnhealthyThresholdCount": 5,
                "VpcId": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "VPC"
                    }
                },
                "Matcher": {
                    "HttpCode": "200,302,401"
                }
            }
        },
        "LoadBalancerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Access to ports 22, 80 & 443",
                "GroupName": "LoadBalancerSecurityGroup",
                "VpcId": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "VPC"
                    }
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "DNSresourcerecord": {
            "Type": "AWS::Route53::RecordSet",
            "Properties": {
                "AliasTarget": {
                    "HostedZoneId": {
                        "Fn::GetAtt": [
                            "ApplicationLoadBalancer",
                            "CanonicalHostedZoneID"
                        ]
                    },
                    "DNSName": {
                        "Fn::GetAtt": [
                            "ApplicationLoadBalancer",
                            "DNSName"
                        ]
                    }
                },
                "HostedZoneId": {
                    "Ref": "hostedZoneID"
                },
                "Name": {
                    "Ref": "domainName"
                },
                "Type": "A"
            }
        }
    }
}